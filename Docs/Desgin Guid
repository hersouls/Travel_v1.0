Design_v2.0 – Moonwave Travel Design Guide (Tailwind UI Edition)
01. 디자인 존재 선언
Moonwave Travel의 디자인은 "현대성, 일관성, 접근성"을 핵심으로 한다.
Tailwind UI Toolkit 기반의 프리미엄 컴포넌트 시스템을 활용하여 사용자 경험을 극대화한다.
UI는 직관적이고 아름다운 인터페이스를 통해 여행의 즐거움을 더한다.

02. 컬러 시스템 (Tailwind UI 기반)
- Primary: #2563EB (Blue-600) - 메인 브랜드 컬러
- Secondary: #F3F4F6 (Gray-100) - 배경 및 보조 컬러
- Success: #16A34A (Green-600) - 성공 상태
- Warning: #F97316 (Orange-500) - 경고 상태
- Error: #DC2626 (Red-600) - 에러 상태
- Neutral: #6B7280 (Gray-500) - 텍스트 및 보조 요소

컬러 사용 가이드:
- Primary: 버튼, 링크, 강조 요소
- Secondary: 배경, 카드, 구분선
- Success: 완료 상태, 긍정적 피드백
- Warning: 주의사항, 임시 상태
- Error: 오류 메시지, 삭제 액션
- Neutral: 본문 텍스트, 아이콘

03. 타이포그래피
기본 폰트: Inter (Tailwind UI 기본)
- H1: text-3xl font-bold (30px)
- H2: text-2xl font-semibold (24px)
- H3: text-xl font-semibold (20px)
- Body: text-base font-normal (16px)
- Caption: text-sm font-medium (14px)
- Small: text-xs font-medium (12px)

모바일 최적화:
- H1: text-2xl font-bold (24px)
- H2: text-xl font-semibold (20px)
- Body: text-sm font-normal (14px)

04. 컴포넌트 정의 (Tailwind UI 기반)

4.1 Button 컴포넌트
```tsx
// 기본 버튼
<Button variant="default" size="md">
  기본 버튼
</Button>

// 변형
- default: bg-blue-600 hover:bg-blue-700
- secondary: bg-gray-100 text-gray-900 hover:bg-gray-200
- outline: border border-gray-300 bg-transparent
- ghost: hover:bg-gray-100
- destructive: bg-red-600 hover:bg-red-700

// 크기
- sm: h-9 px-3 text-sm
- md: h-10 px-4 py-2 text-sm
- lg: h-11 px-8 text-base
```

4.2 Input 컴포넌트
```tsx
<Input
  type="text"
  placeholder="입력하세요"
  className="focus-visible:ring-blue-500"
/>
```

4.3 Card 컴포넌트
```tsx
<Card className="rounded-lg border border-gray-200 bg-white shadow-sm">
  <CardHeader>
    <CardTitle>제목</CardTitle>
  </CardHeader>
  <CardContent>
    내용
  </CardContent>
</Card>
```

4.4 Badge 컴포넌트
```tsx
<Badge variant="default">
  상태 표시
</Badge>

// 변형
- default: bg-blue-100 text-blue-800
- secondary: bg-gray-100 text-gray-800
- outline: border border-gray-300 text-gray-700
- destructive: bg-red-100 text-red-800
```

4.5 Avatar 컴포넌트
```tsx
<Avatar size="md" src="/avatar.jpg" fallback="U" />
```

4.6 DropdownMenu 컴포넌트
```tsx
<DropdownMenu trigger={<Button>메뉴</Button>}>
  <DropdownMenuItem>항목 1</DropdownMenuItem>
  <DropdownMenuSeparator />
  <DropdownMenuItem>항목 2</DropdownMenuItem>
</DropdownMenu>
```

05. 레이아웃 & 그리드 시스템

5.1 기본 구조
- Container: max-w-7xl mx-auto px-4 sm:px-6 lg:px-8
- Grid: grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6
- Flex: flex items-center justify-between
- Stack: space-y-4 (세로 스택), space-x-4 (가로 스택)

5.2 반응형 브레이크포인트
- sm: 640px (태블릿 세로)
- md: 768px (태블릿 가로)
- lg: 1024px (데스크탑)
- xl: 1280px (대형 데스크탑)
- 2xl: 1536px (초대형 화면)

5.3 스페이싱 시스템
- xs: 4px (1rem)
- sm: 8px (0.5rem)
- md: 16px (1rem)
- lg: 24px (1.5rem)
- xl: 32px (2rem)
- 2xl: 48px (3rem)

06. 여행 카드 디자인 가이드

6.1 TripCard 컴포넌트
```tsx
<TripCard
  trip={trip}
  onClick={handleClick}
  showPlansCount={true}
/>
```

특징:
- aspect-[1.618] 황금비율 적용
- hover:scale-[1.02] 부드러운 확대 효과
- hover:shadow-lg 그림자 강화
- 국가 Badge 우상단 배치
- 즐겨찾기 버튼 좌상단 배치 (호버 시 표시)

6.2 PlanCard 컴포넌트
```tsx
<PlanCard
  plan={plan}
  onClick={handleClick}
  showDetails={true}
/>
```

특징:
- 계획 유형 Badge 표시
- 별점 SVG 아이콘 사용
- 사진 개수 Badge 표시
- 유튜브 링크 Play 아이콘 표시

07. 페이지별 디자인 패턴

7.1 메인 페이지 (HomePage)
- 히어로 섹션: 중앙 정렬, Badge 기반 통계
- 검색 바: 아이콘 포함, 자동완성
- 필터 버튼: 토글 스타일
- 카드 그리드: 반응형 레이아웃
- 통계 섹션: 아이콘 + 숫자 조합

7.2 여행 생성 페이지
- 히어로 섹션: 아이콘 + 제목 + 설명
- 이미지 업로드: 드래그 앤 드롭 스타일
- 폼 필드: 아이콘 포함 입력
- 국가 선택: 드롭다운 자동완성
- 날짜 선택: 사이드 바이 사이드

7.3 여행 상세 페이지
- 여행 정보 카드: 이미지 + 메타데이터
- Day 탭: Badge 기반 계획 개수 표시
- 계획 카드 리스트: 시간순 정렬
- 플로팅 액션 버튼: 우하단 고정

08. 애니메이션 & 전환 효과

8.1 기본 전환
```css
transition-all duration-300
```

8.2 호버 효과
- 카드: hover:scale-[1.02] hover:shadow-lg
- 버튼: hover:bg-blue-700
- 링크: hover:text-blue-600

8.3 로딩 상태
- 스피너: animate-spin
- 페이드 인: animate-fade-in
- 바운스: animate-bounce

09. 접근성 가이드

9.1 키보드 네비게이션
- 모든 인터랙티브 요소에 focus-visible 스타일
- Tab 순서 논리적 배치
- Enter/Space 키로 액션 실행

9.2 색상 대비
- 텍스트 대비율 4.5:1 이상 유지
- 색상만으로 정보 전달 금지
- 아이콘과 텍스트 조합 사용

9.3 스크린 리더 지원
- 적절한 alt 텍스트 제공
- ARIA 라벨 사용
- 시맨틱 HTML 구조

10. 성능 최적화

10.1 이미지 최적화
- Next.js Image 컴포넌트 사용
- 적절한 sizes 속성 설정
- WebP 포맷 우선 사용

10.2 컴포넌트 최적화
- React.memo 적절한 사용
- 불필요한 리렌더링 방지
- 코드 스플리팅 적용

11. 개발 가이드라인

11.1 컴포넌트 작성 규칙
```tsx
// 파일명: PascalCase
// 컴포넌트명: PascalCase
// Props 인터페이스: ComponentNameProps
// 기본 export 사용

interface TripCardProps {
  trip: Trip;
  onClick?: () => void;
  showPlansCount?: boolean;
}

const TripCard: React.FC<TripCardProps> = ({ trip, onClick, showPlansCount = true }) => {
  return (
    <Card className="cursor-pointer transition-all duration-300 hover:shadow-lg hover:scale-[1.02]">
      {/* 내용 */}
    </Card>
  );
};

export default TripCard;
```

11.2 스타일링 규칙
- Tailwind CSS 클래스 우선 사용
- 커스텀 CSS는 최소화
- 일관된 네이밍 컨벤션
- 반응형 디자인 필수

11.3 상태 관리
- 로컬 상태: useState
- 폼 상태: React Hook Form
- 전역 상태: Context API 또는 Zustand

12. 테스트 가이드

12.1 컴포넌트 테스트
- 렌더링 테스트
- 사용자 인터랙션 테스트
- 접근성 테스트
- 반응형 테스트

12.2 시각적 회귀 테스트
- Storybook 활용
- 스크린샷 비교
- 브라우저 호환성 테스트

---

**Moonwave Travel Design System v2.0**
*Tailwind UI Toolkit 기반 현대적 디자인 시스템*
*일관성, 접근성, 성능을 모두 고려한 사용자 중심 설계*
