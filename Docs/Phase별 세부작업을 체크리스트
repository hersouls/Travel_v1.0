## 요약
Moonwave Travel 프로젝트의 Phase별 세부작업을 체크리스트로 정리합니다. Next.js 기반 여행 플래닝 시스템의 단계별 실행 계획을 체크박스와 함께 구성합니다.

## 분석
프로젝트 문서 분석 결과:
- **Phase 1**: 프로젝트 초기화 및 기반 구축 (1-2주)
- **Phase 2**: 핵심 기능 개발 (2-3주)
- **Phase 3**: 통합 및 최적화 (1-2주)
- **Phase 4**: 확장 기능 개발 (2-4주)

## 실행

# 🚀 Moonwave Travel Phase별 세부작업 체크리스트

## Phase 1: 프로젝트 초기화 및 기반 구축 (Week 1-2)

### 🗂 Week 1: 프로젝트 설정

#### GitHub & 개발환경
- [ ] GitHub Repository 생성 (`moonwave-travel-next`)
- [ ] `.cursorrules` 파일 작성 (localhost 금지, Mock 데이터 금지)
- [ ] GitHub Secrets 환경변수 설정
  - [ ] `NEXT_PUBLIC_SUPABASE_URL`
  - [ ] `NEXT_PUBLIC_SUPABASE_ANON_KEY`
  - [ ] `NEXT_PUBLIC_GOOGLE_MAPS_API_KEY`
  - [ ] `NEXT_PUBLIC_GOOGLE_PLACES_API_KEY`
- [ ] GitHub Actions 워크플로우 파일 생성 (`.github/workflows/deploy-nextjs.yml`)

#### Supabase 설정
- [ ] Supabase 프로젝트 생성 (프로젝트명: `moonwave-travel-db`)
- [ ] 데이터베이스 스키마 생성 (`supabase/migrations/001_initial_schema.sql`)
  - [ ] `profiles` 테이블
  - [ ] `travel_plans` 테이블  
  - [ ] `travel_days` 테이블
  - [ ] `day_plans` 테이블
  - [ ] `payment_history` 테이블
- [ ] RLS (Row Level Security) 정책 설정
- [ ] 테스트 데이터 삽입 (`supabase/seed.sql`)

#### Next.js 프로젝트 초기화
- [ ] Next.js 14 프로젝트 생성 (App Router)
- [ ] `package.json` 설정 (dev 스크립트 localhost 금지)
- [ ] `next.config.js` 설정 (Static Export)
- [ ] `tailwind.config.js` 설정
  - [ ] Pretendard 폰트 설정
  - [ ] Container Queries 플러그인
  - [ ] Moonwave 컬러 시스템
- [ ] `tsconfig.json` TypeScript 설정

### 🎨 Week 2: 기본 구조 및 컴포넌트

#### 프로젝트 구조 생성
- [ ] `app/` 디렉토리 구조 설정
  - [ ] `layout.tsx` (루트 레이아웃)
  - [ ] `page.tsx` (홈페이지)
  - [ ] `globals.css` (Tailwind + Pretendard)
  - [ ] `loading.tsx`, `error.tsx`, `not-found.tsx`
- [ ] `components/` 디렉토리 구조
  - [ ] `ui/` (기본 UI 컴포넌트)
  - [ ] `features/` (도메인 컴포넌트)
  - [ ] `providers/` (전역 프로바이더)

#### Supabase 연동
- [ ] Supabase 클라이언트 설정 (`lib/supabase/client.ts`)
- [ ] Supabase 서버 컴포넌트 설정 (`lib/supabase/server.ts`)
- [ ] SupabaseProvider 컴포넌트 생성
- [ ] 타입 정의 (`types/supabase.ts`)

#### 기본 UI 컴포넌트
- [ ] Button 컴포넌트 (Pretendard 폰트 적용)
- [ ] Card 컴포넌트 (Container Queries 적용)
- [ ] Input 컴포넌트
- [ ] Badge 컴포넌트 (여행 유형별)

#### 배포 설정
- [ ] GitHub Pages 설정
- [ ] 커스텀 도메인 설정 (`travel.moonwave.kr`)
- [ ] 첫 배포 테스트

---

## Phase 2: 핵심 기능 개발 (Week 3-5)

### 📱 Week 3: 여행 관리 기능

#### 여행 일정 CRUD
- [ ] 여행 목록 페이지 (`app/travels/page.tsx`)
- [ ] 여행 생성 페이지 (`app/travels/new/page.tsx`)
- [ ] 여행 상세 페이지 (`app/travels/[travelId]/page.tsx`)
- [ ] 여행 수정 페이지 (`app/travels/[travelId]/edit/page.tsx`)

#### 여행 관련 컴포넌트
- [ ] TravelCard 컴포넌트 (@container 반응형)
- [ ] TravelList 컴포넌트 (실시간 구독)
- [ ] CreateTravelForm 컴포넌트
- [ ] TravelDetailView 컴포넌트

#### 커스텀 훅
- [ ] `useTravelPlans` 훅 (실시간 데이터)
- [ ] `useCreateTravel` 훅
- [ ] `useUpdateTravel` 훅
- [ ] `useDeleteTravel` 훅

### 📅 Week 4: Day별 계획 관리

#### Day별 계획 페이지
- [ ] Day별 계획 목록 (`app/travels/[travelId]/plans/page.tsx`)
- [ ] Day별 상세 계획 (`app/travels/[travelId]/plans/[dayId]/page.tsx`)

#### 계획 관련 컴포넌트
- [ ] DayPlanCard 컴포넌트
- [ ] PlanEditor 컴포넌트
- [ ] PlanTimeline 컴포넌트
- [ ] TravelBadge 컴포넌트 (계획 유형별)

#### 실시간 동기화
- [ ] 계획 실시간 업데이트 구현
- [ ] 협업자 presence 기능
- [ ] 실시간 에러 처리

### 🗺 Week 5: 지도 통합

#### Google Maps 연동
- [ ] Google Maps 초기화 설정
- [ ] 지도 페이지 (`app/map/page.tsx`)
- [ ] TravelMap 컴포넌트
- [ ] PlanMarker 컴포넌트

#### Google Places 연동
- [ ] Places Autocomplete 컴포넌트
- [ ] PlaceSearch 컴포넌트
- [ ] 장소 상세 정보 표시
- [ ] 장소 데이터 Supabase 저장

#### 지도 기능
- [ ] 계획별 마커 표시
- [ ] 경로 연결 표시
- [ ] 정보창(InfoWindow) 구현
- [ ] 모바일 최적화 BottomSheet

---

## Phase 3: 통합 및 최적화 (Week 6-7)

### 🔧 Week 6: 성능 최적화

#### Next.js 최적화
- [ ] 이미지 최적화 (Next/Image)
- [ ] 폰트 최적화 (Pretendard 로컬 폰트)
- [ ] 정적 경로 생성 (`generateStaticParams`)
- [ ] 메타데이터 최적화 (`generateMetadata`)

#### 성능 측정
- [ ] Core Web Vitals 측정
  - [ ] LCP < 2.5초
  - [ ] FID < 100ms
  - [ ] CLS < 0.1
- [ ] 번들 크기 최적화 (< 500KB)
- [ ] Lighthouse 점수 개선

#### 사용자 경험
- [ ] 로딩 상태 개선
- [ ] 에러 처리 개선
- [ ] 빈 상태 UI
- [ ] 스켈레톤 로더

### 🎨 Week 7: UI/UX 완성

#### 반응형 디자인
- [ ] Container Queries 전체 적용
- [ ] 모바일 뷰 최적화
- [ ] 태블릿 뷰 최적화
- [ ] 데스크톱 뷰 최적화

#### 접근성
- [ ] ARIA 레이블 추가
- [ ] 키보드 네비게이션
- [ ] 포커스 관리
- [ ] 스크린 리더 테스트

#### 한글 최적화
- [ ] Pretendard 폰트 전체 적용 확인
- [ ] `tracking-korean-normal` 클래스 적용
- [ ] `break-keep-ko` 줄바꿈 최적화
- [ ] 숫자 표시 최적화 (`text-numeric`)

---

## Phase 4: 확장 기능 (Week 8-11)

### 🎯 Week 8-9: 추가 기능

#### 이미지 업로드
- [ ] Supabase Storage 설정
- [ ] 이미지 업로드 컴포넌트
- [ ] 이미지 갤러리 뷰
- [ ] 이미지 압축 및 최적화

#### 사용자 인증
- [ ] 로그인 페이지 (`app/(auth)/signin/page.tsx`)
- [ ] Magic Link 인증
- [ ] OAuth 인증 (Google, GitHub)
- [ ] 세션 관리

#### 공유 기능
- [ ] 여행 공개/비공개 설정
- [ ] 공유 링크 생성
- [ ] 협업자 초대
- [ ] 권한 관리

### 📊 Week 10-11: 고급 기능

#### 통계 및 분석
- [ ] 여행 통계 대시보드
- [ ] 예산 관리 기능
- [ ] 지출 분석
- [ ] 여행 히스토리

#### 알림 시스템
- [ ] 알림 테이블 생성
- [ ] 여행 전 알림
- [ ] 계획 리마인더
- [ ] 이메일 알림 연동

#### PWA 지원 (선택)
- [ ] manifest.json 생성
- [ ] Service Worker 설정
- [ ] 오프라인 지원
- [ ] 앱 아이콘 생성

---

## 🚀 배포 및 런칭 체크리스트

### 최종 검증
- [ ] 모든 페이지 접근성 테스트
- [ ] 크로스 브라우저 테스트
- [ ] 모바일 디바이스 테스트
- [ ] 실제 데이터 flow 테스트

### 배포 준비
- [ ] 환경 변수 최종 확인
- [ ] GitHub Actions 배포 성공
- [ ] travel.moonwave.kr 접속 확인
- [ ] SSL 인증서 확인

### 문서화
- [ ] README.md 업데이트
- [ ] API 문서 최종 검토
- [ ] 사용자 가이드 작성
- [ ] 개발자 문서 정리

### 모니터링
- [ ] Google Analytics 설정
- [ ] 에러 모니터링 설정
- [ ] 성능 모니터링 대시보드
- [ ] 사용자 피드백 채널

---

**💡 Phase별 진행 팁**
- 각 Phase는 이전 Phase의 완료를 전제로 합니다
- 체크리스트는 매일 업데이트하며 진행상황을 추적합니다
- 문제 발생 시 즉시 문서화하고 해결방안을 기록합니다
- Mock 데이터 사용 금지 - 항상 실제 Supabase 데이터 사용

이 체크리스트를 GitHub Issues나 프로젝트 관리 도구에 복사하여 실시간으로 진행상황을 추적하실 수 있습니다.
