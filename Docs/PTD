# 프로토타입 설계서 (Cursor Agent & Github Actions 배포 기반)

## 1. 프로토타입 설계·운영 목적
- **Cursor Agent**로 실제 코드 흐름과 UI 상태를 설계·시뮬레이션  
- 협업/코드리뷰/테스트 자동화까지 한 번에 운영  
- 개발/실서비스와 일치하는 실제 코드 기반 인터랙션 검증

---

## 2. 제작 및 운영 툴
- **주요 도구:**  
  - Cursor(Agent) – 코드 기반 UI/플로우 설계·테스트
  - Github(Github Actions) – CI/CD 자동화, 코드 머지/배포
  - travel.moonwave.kr – 실서비스 배포 도메인

---

## 3. 프로토타입 플로우/구현 범위

1. **Cursor에서 주요 화면(컴포넌트)·로직 설계**  
   - 여행일정/계획/장소/지도 등 실제 코드 및 상태관리 기반  
   - 상태 변화, 사용자 액션, 플로우 전환 시뮬레이션 가능

2. **코드 저장소(Github) 연동**  
   - 브랜치/풀리퀘스트 단위로 Cursor 작업물 푸시  
   - 리뷰/테스트용 Preview 환경(Deploy Preview) 활용

3. **Github Actions 기반 CI/CD 파이프라인**  
   - 커밋/PR/머지 시 자동 빌드 & 테스트
   - 배포 성공 시 travel.moonwave.kr에 최신 버전 자동 반영
   - 실패/오류 발생 시 슬랙·이메일 등 알림(옵션)

4. **실제 사용자 경험 검증**  
   - travel.moonwave.kr에서 모바일 기기 실서비스 UX 직접 검증
   - 피드백/버그 트래킹 후, Cursor에서 즉시 코드 수정·재배포

---

## 4. 화면 전환·상호작용 규칙
- 모든 플로우는 실제 코드(state/props/route) 기반 인터랙션 설계  
- 커스텀 Hook, Context, Zustand 등 상태관리 직접 테스트  
- 주요 이벤트(버튼/FAB/탭/마커 등)별 onClick, onChange, onSubmit 등 구현  
- API 연동 및 오류/로딩/비동기 처리 실제 코드로 검증

---

## 5. 자동화·배포 시나리오

- **코드 커밋 → Github PR → Actions 자동 빌드/배포 → travel.moonwave.kr 실서비스 반영**
- 배포 전 자동화 테스트(Puppeteer, Playwright 등) 추가 가능
- 배포 이력/버전 관리, 롤백·재배포 옵션

---

## 6. 관리/협업 지침
- 모든 설계/수정/리뷰는 Cursor Agent 내 코드 & Github 이슈로 관리  
- 문서화는 Markdown/README/PR Description 기반  
- 주요 변경사항/버전/피드백 HQ 또는 Snapbook에 자동 요약 가능

---

(※ Figma 대신 코드 기반 프로토타입-실서비스 간 **“무간극 검증”**을 최우선,  
모든 스펙/피드백/변경내역은 깃허브 기반으로 완전 관리)