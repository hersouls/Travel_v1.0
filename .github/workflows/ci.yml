name: Continuous Integration

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test & Quality Check
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type check
        run: npm run type-check

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format:check

      - name: Build application
        run: npm run build
        env:
          # 테스트용 더미 환경변수
          NEXT_PUBLIC_SUPABASE_URL: https://test.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: test_key
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: test_key
          NEXT_PUBLIC_GOOGLE_PLACES_API_KEY: test_key
          NEXT_PUBLIC_GOOGLE_PLACES_NEW_API_KEY: test_key
          NEXT_PUBLIC_GOOGLE_DIRECTIONS_API_KEY: test_key
          NEXT_PUBLIC_GOOGLE_GEOCODING_API_KEY: test_key

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        uses: oke-py/npm-audit-action@v3
        with:
          audit_level: moderate
          github_token: ${{ secrets.GITHUB_TOKEN }}
          create_issues: true
          create_pr_comments: true
          issue_labels: vulnerability,security
          dedupe_issues: true

  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate
          echo "NPM audit completed successfully!"

  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: https://test.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY: test_key
          NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: test_key
          NEXT_PUBLIC_GOOGLE_PLACES_API_KEY: test_key
          NEXT_PUBLIC_GOOGLE_PLACES_NEW_API_KEY: test_key
          NEXT_PUBLIC_GOOGLE_DIRECTIONS_API_KEY: test_key
          NEXT_PUBLIC_GOOGLE_GEOCODING_API_KEY: test_key

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: './.lighthouserc.json'
